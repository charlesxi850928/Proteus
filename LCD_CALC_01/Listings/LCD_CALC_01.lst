C51 COMPILER V9.60.0.0   LCD_CALC_01                                                       04/06/2022 22:09:19 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE LCD_CALC_01
OBJECT MODULE PLACED IN .\Objects\LCD_CALC_01.obj
COMPILER INVOKED BY: D:\Program\KEIL_MDK\C51\BIN\C51.EXE LCD_CALC_01.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT
                    -(.\Listings\LCD_CALC_01.lst) TABS(2) OBJECT(.\Objects\LCD_CALC_01.obj)

line level    source

   1          #include <reg51.h>
   2          sbit E = P2^0;
   3          sbit RW = P2^1;
   4          sbit RS = P2^2;
   5          sbit CS1 = P2^3;
   6          sbit CS2 = P2^4;
   7          sbit RST = P2^5;
   8          unsigned char code dispx[]={
   9          0x00,0x00,0x80,0xC0,0x60,0x60,0x60,0x60,0xC0,0x80,0x00,0x00,0x00,0xFE,0xFF,0x01,
  10          0x00,0x00,0x00,0x00,0x01,0xFF,0xFE,0x00,0x00,0x00,0x03,0x07,0x0C,0x0C,0x0C,0x0C,
  11          0x07,0x03,0x00,0x00,/*"0",0*/
  12          
  13          0x00,0x00,0x80,0x80,0x40,0xC0,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  14          0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0C,0x0C,0x0C,0x0F,0x0F,0x0C,
  15          0x0C,0x0C,0x00,0x00,/*"1",1*/
  16          
  17          0x00,0x00,0xC0,0x60,0x60,0x60,0x60,0xE0,0xC0,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,
  18          0xC0,0x20,0x10,0x08,0x07,0x03,0x00,0x00,0x00,0x00,0x0E,0x0F,0x0C,0x0C,0x0C,0x0C,
  19          0x0C,0x0C,0x00,0x00,/*"2",2*/
  20          
  21          0x00,0x00,0xC0,0x60,0x60,0x60,0x60,0xE0,0xC0,0x80,0x00,0x00,0x00,0x00,0x00,0x18,
  22          0x18,0x18,0x18,0x3C,0xE7,0xC3,0x00,0x00,0x00,0x00,0x06,0x0C,0x0C,0x0C,0x0C,0x0E,
  23          0x07,0x03,0x00,0x00,/*"3",3*/
  24          
  25          0x00,0x00,0x00,0x00,0x00,0x80,0x40,0xE0,0xE0,0x00,0x00,0x00,0x00,0xE0,0xD0,0xCC,
  26          0xC2,0xC1,0xC0,0xFF,0xFF,0xC0,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,
  27          0x0F,0x00,0x00,0x00,/*"4",4*/
  28          
  29          0x00,0x00,0xE0,0xE0,0x60,0x60,0x60,0x60,0x60,0x60,0x00,0x00,0x00,0x00,0x0F,0x0F,
  30          0x0C,0x0C,0x1C,0x18,0xF8,0xE0,0x00,0x00,0x00,0x00,0x06,0x0C,0x0C,0x0C,0x0C,0x06,
  31          0x07,0x01,0x00,0x00,/*"5",5*/
  32          
  33          0x00,0x00,0x80,0xC0,0xC0,0x60,0x60,0x60,0x60,0xC0,0x00,0x00,0x00,0xFE,0xFF,0x39,
  34          0x08,0x0C,0x0C,0x0C,0x1C,0xF8,0xF0,0x00,0x00,0x00,0x03,0x06,0x0C,0x0C,0x0C,0x0C,
  35          0x06,0x07,0x01,0x00,/*"6",6*/
  36          
  37          0x00,0x00,0x60,0x60,0x60,0x60,0x60,0x60,0x60,0xE0,0xE0,0x00,0x00,0x00,0x00,0x00,
  38          0x80,0xE0,0x78,0x1C,0x07,0x03,0x00,0x00,0x00,0x00,0x00,0x0C,0x0F,0x03,0x00,0x00,
  39          0x00,0x00,0x00,0x00,/*"7",7*/
  40          
  41          0x00,0x00,0x80,0xC0,0x60,0x60,0x60,0xE0,0xC0,0x80,0x00,0x00,0x00,0xC0,0xE3,0x37,
  42          0x1E,0x1C,0x18,0x38,0x7F,0xE3,0xC0,0x00,0x00,0x03,0x07,0x0E,0x0C,0x0C,0x0C,0x0C,
  43          0x0E,0x07,0x03,0x00,/*"8",8*/
  44          
  45          0x00,0x00,0xC0,0xC0,0x60,0x60,0x60,0x60,0xC0,0x80,0x00,0x00,0x00,0x1F,0x3F,0x70,
  46          0x60,0x60,0x60,0x20,0x18,0xFF,0xFE,0x00,0x00,0x00,0x06,0x0C,0x0C,0x0C,0x0C,0x06,
  47          0x07,0x03,0x00,0x00,/*"9",9*/
  48          
  49          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x30,0x30,
  50          0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x00,0x00,0x03,0x03,0x03,0x03,0x03,0x03,0x03,
  51          0x03,0x03,0x03,0x00,/*"=",10*/
  52          
  53          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0x60,0x60,
  54          0x60,0xFE,0x60,0x60,0x60,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0x00,0x00,
C51 COMPILER V9.60.0.0   LCD_CALC_01                                                       04/06/2022 22:09:19 PAGE 2   

  55          0x00,0x00,0x00,0x00,/*"+",11*/
  56          
  57          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0x60,
  58          0x60,0x60,0x60,0x60,0x60,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  59          0x00,0x00,0x00,0x00,/*"-",12*/
  60          
  61          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x06,0x0C,0x18,
  62          0xF0,0xE0,0xF0,0x18,0x0C,0x06,0x02,0x00,0x08,0x0C,0x06,0x03,0x01,0x00,0x01,0x03,
  63          0x06,0x0C,0x08,0x00,/*"x",13*/
  64          
  65          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x60,0x10,0x00,0x00,0x00,0x00,0x00,
  66          0x80,0x60,0x18,0x06,0x01,0x00,0x00,0x00,0x00,0x60,0x18,0x06,0x01,0x00,0x00,0x00,
  67          0x00,0x00,0x00,0x00,/*"/",14*/
  68          
  69          0x00,0x00,0x80,0xC0,0xC0,0x60,0x60,0x60,0x60,0x60,0xC0,0x00,0x00,0xFE,0xFF,0x83,
  70          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x07,0x06,0x0E,0x0C,0x0C,
  71          0x0C,0x0C,0x06,0x00,/*"C",15*/
  72          
  73          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xCC,0xC6,
  74          0x66,0x66,0x66,0x66,0xFE,0xFC,0x00,0x00,0x00,0x07,0x07,0x0C,0x0C,0x0C,0x0C,0x04,
  75          0x07,0x0F,0x0C,0x04,/*"a",16*/
  76          
  77          0x00,0x00,0x30,0x30,0x30,0x30,0xF0,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  78          0x00,0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,
  79          0x00,0x00,0x00,0x00,/*"l",17*/
  80          
  81          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF0,0xFC,0x1C,
  82          0x0E,0x06,0x06,0x06,0x06,0x0C,0x00,0x00,0x00,0x01,0x07,0x07,0x0E,0x0C,0x0C,0x0C,
  83          0x0C,0x06,0x00,0x00,/*"c",18*/
  84          
  85          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFE,0xFE,0x00,
  86          0x00,0x00,0x00,0x00,0xFE,0xFE,0x00,0x00,0x00,0x07,0x0F,0x0C,0x0C,0x0C,0x06,0x03,
  87          0x0F,0x0F,0x00,0x00,/*"u",19*/
  88          
  89          0x00,0x00,0x30,0x30,0x30,0x30,0xF0,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  90          0x00,0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,
  91          0x00,0x00,0x00,0x00,/*"l",20*/
  92          
  93          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xCC,0xC6,
  94          0x66,0x66,0x66,0x66,0xFE,0xFC,0x00,0x00,0x00,0x07,0x07,0x0C,0x0C,0x0C,0x0C,0x04,
  95          0x07,0x0F,0x0C,0x04,/*"a",21*/
  96          
  97          0x00,0x00,0x00,0x00,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x06,0x06,0x06,
  98          0xFF,0xFF,0x06,0x06,0x06,0x06,0x06,0x00,0x00,0x00,0x00,0x00,0x07,0x0F,0x0C,0x0C,
  99          0x0C,0x0C,0x0C,0x00,/*"t",22*/
 100          
 101          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF0,0xFC,0x0E,
 102          0x06,0x06,0x06,0x0E,0xFC,0xF0,0x00,0x00,0x00,0x01,0x07,0x0E,0x0C,0x0C,0x0C,0x0E,
 103          0x07,0x01,0x00,0x00,/*"o",23*/
 104          
 105          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFE,
 106          0xFE,0x18,0x0C,0x06,0x06,0x0E,0x0E,0x00,0x00,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,
 107          0x00,0x00,0x00,0x00/*"r",24*/
 108          
 109          
 110          };
 111          void writeCMD(unsigned char x){
 112   1        int i;
 113   1        RS=0;//CMD
 114   1        RW=0;//Write
 115   1        P0=x;//CMD Content
 116   1        E=1;//Enable/Start Read/Write Data
C51 COMPILER V9.60.0.0   LCD_CALC_01                                                       04/06/2022 22:09:19 PAGE 3   

 117   1        for(i=0;i<20;i++);//Wait
 118   1        E=0;//Colose/End Read/Write Data
 119   1      }
 120          void initLCD(){
 121   1        writeCMD(0x3F);//Open Display
 122   1        writeCMD(0xC0);//Set Initial Row
 123   1        writeCMD(0xB8);//Set X Coordinate
 124   1        writeCMD(0x40);//Set Y Coordinate
 125   1      }
 126          void writeData(unsigned char x){
 127   1        int i;
 128   1        RS=1;//Data
 129   1        RW=0;//Write
 130   1        P0=x;//Data Content
 131   1        E=1;//Enable/Start Read/Write Data
 132   1        for(i=0;i<20;i++);//Wait
 133   1        E=0;//Close/End Read/Write Data
 134   1      }
 135          void showOneChar(unsigned char index,position){
 136   1        int x,y,k;
 137   1        //x<3,12x24,12 cols, 24 rows, every 8 rows will render one time
 138   1        for(k=index*36,x=0;x<3;x++){
 139   2          if(position<5){
 140   3            CS1 = 0;
 141   3            CS2 = 1;
 142   3            writeCMD(0xBA+x);
 143   3            writeCMD(0x44+position*12);
 144   3            for(y=0;y<12;y++){
 145   4              writeData(dispx[k++]);
 146   4            }
 147   3          }else{
 148   3            CS1 = 1;
 149   3            CS2 = 0;
 150   3            writeCMD(0xBA+x);
 151   3            writeCMD(0x40+(position-5)*12);
 152   3            for(y=0;y<12;y++){
 153   4              writeData(dispx[k++]);
 154   4            }
 155   3          }
 156   2        }
 157   1      }
 158          void clearLCD(){
 159   1        int x,y,k;
 160   1        RST = 0;
 161   1        RST = 1;
 162   1        initLCD();
 163   1        //Only 8 rows data
 164   1        for(k=0,x=0;x<8;x++){
 165   2          //Left 64 points
 166   2          CS1 = 0;
 167   2          CS2 = 1;
 168   2          writeCMD(0xB8+x);
 169   2          for(y=0;y<64;y++){
 170   3            writeData(0x00);
 171   3          }
 172   2          //Right 64 points
 173   2          CS1 = 1;
 174   2          CS2 = 0;
 175   2          writeCMD(0xB8+x);
 176   2          for(y=0;y<64;y++){
 177   3            writeData(0x00);
 178   3          }
C51 COMPILER V9.60.0.0   LCD_CALC_01                                                       04/06/2022 22:09:19 PAGE 4   

 179   2        }
 180   1      }
 181          int readKey(){
 182   1          int keyValue = 0xFF;
 183   1          int debounce = 5000;
 184   1          long k,p; 
 185   1          //7,4,1,ON/C    
 186   1          P1 = 0xEF;
 187   1          p = P1;
 188   1          if(p!=0xEF){
 189   2            //debounce
 190   2            k = debounce;
 191   2            while(k--);
 192   2            p = P1;
 193   2            switch(p){
 194   3              case 0xEE: keyValue = 7; break;
 195   3              case 0xED: keyValue = 4; break;
 196   3              case 0xEB: keyValue =  1; break;
 197   3              case 0xE7: keyValue =  25; break;
 198   3            }
 199   2          }
 200   1          //8,5,2,0
 201   1          P1 = 0xDF;
 202   1          p = P1;
 203   1          if(p!=0xDF){
 204   2            //debounce
 205   2            k = debounce;
 206   2            while(k--);
 207   2            p = P1;
 208   2            switch(p){
 209   3              case 0xDE: keyValue =  8; break;
 210   3              case 0xDD: keyValue =  5; break;
 211   3              case 0xDB: keyValue =  2; break;
 212   3              case 0xD7: keyValue =  0; break;
 213   3            }
 214   2          }
 215   1          //9,6,3,=
 216   1          P1 = 0xBF;
 217   1          p = P1;
 218   1          if(p!=0xBF){
 219   2            //debounce
 220   2            k = debounce;
 221   2            while(k--);
 222   2            p = P1;
 223   2            switch(p){
 224   3              case 0xBE: keyValue =  9; break;
 225   3              case 0xBD: keyValue =  6; break;
 226   3              case 0xBB: keyValue =  3; break;
 227   3              case 0xB7: keyValue =  10; break;
 228   3            }
 229   2          }
 230   1          //%,X,-,+
 231   1          P1 = 0x7F;
 232   1          p = P1;
 233   1          if(p!=0x7F){
 234   2            //debounce
 235   2            k = debounce;
 236   2            while(k--);
 237   2            p = P1;
 238   2            switch(p){
 239   3              case 0x7E: keyValue =  14; break;
 240   3              case 0x7D: keyValue =  13; break;
C51 COMPILER V9.60.0.0   LCD_CALC_01                                                       04/06/2022 22:09:19 PAGE 5   

 241   3              case 0x7B: keyValue =  12; break;
 242   3              case 0x77: keyValue =  11; break;
 243   3            }
 244   2          }
 245   1          return keyValue;
 246   1      }
 247          void main(){
 248   1        int key;
 249   1        int step = 0;
 250   1        int num1,op,num2;
 251   1        long result;
 252   1        RST = 0;
 253   1        RST = 1;
 254   1        initLCD();
 255   1        showOneChar(15,0);
 256   1        showOneChar(16,1);
 257   1        showOneChar(17,2);
 258   1        showOneChar(18,3);
 259   1        showOneChar(19,4);
 260   1        showOneChar(20,5);
 261   1        showOneChar(21,6);
 262   1        showOneChar(22,7);
 263   1        showOneChar(23,8);
 264   1        showOneChar(24,9);
 265   1        while(1){
 266   2          key=0xFF;
 267   2          while(key==0xFF)key = readKey();
 268   2          //ON/C
 269   2          if(key==25){
 270   3            step = 0;
 271   3            clearLCD();
 272   3            continue;
 273   3          }
 274   2          step++;
 275   2          switch(step){
 276   3            case 1: 
 277   3                  num1 = key; 
 278   3                  showOneChar(num1,0);
 279   3                  break;
 280   3            case 2: 
 281   3                  op = key; 
 282   3                  showOneChar(op,1);
 283   3                  break;
 284   3            case 3: 
 285   3                  num2 = key; 
 286   3                  showOneChar(num2,2);
 287   3                  break;
 288   3            case 4:
 289   3                  if(key==10){
 290   4                    //+
 291   4                    if(op==11){
 292   5                      result = num1+num2;
 293   5                    //-
 294   5                    }else if(op==12){
 295   5                      result = num1 - num2;
 296   5                    //x
 297   5                    }else if(op==13){
 298   5                      result = num1 * num2;
 299   5                    //%
 300   5                    }else if(op==14){
 301   5                      result = num1 / num2;
 302   5                    }
C51 COMPILER V9.60.0.0   LCD_CALC_01                                                       04/06/2022 22:09:19 PAGE 6   

 303   4                    //Display "=" 
 304   4                    showOneChar(10,3);
 305   4                    //Display value...
 306   4                    if(result<10)showOneChar(result,4);
 307   4                    else{
 308   5                      showOneChar(result/10,4);
 309   5                      showOneChar(result%10,5);
 310   5                    }
 311   4                  }
 312   3                  break;
 313   3            default: break;
 314   3      
 315   3          }
 316   2        }
 317   1        while(1);
 318   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1282    ----
   CONSTANT SIZE    =    900    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      32
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
